version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:${PORT}"
    environment:
      SECRET: ${SECRET}
      PORT: ${PORT} 
      HOST_DATABASE: ${HOST_DATABASE} 
      NAME_DATABASE: ${NAME_DATABASE} 
      USER_DATABASE: ${USER_DATABASE} 
      PASSWORD_DATABASE: ${PASSWORD_DATABASE} 
      NODE_ENV: ${NODE_ENV}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${NAME_DATABASE} 
      MYSQL_USER: ${USER_DATABASE} 
      MYSQL_PASSWORD: ${PASSWORD_DATABASE} 
    ports:
      - "3307:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--password=${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

volumes:
  mysqldata:

networks:
  app-network:
    driver: bridge
